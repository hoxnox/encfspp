macro(add_buildtype TYPE SAN_TYPE LIBNAME)
    set(SANITIZE_FLAGS " -g -O0 -fsanitize=${SAN_TYPE} -DFEATURE_SAN_${SAN_TYPE} -fno-omit-frame-pointer -fno-optimize-sibling-calls -fno-common")
    if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
        set(SANITIZE_LINKER_FLAGS "-lc++abi")
    endif()
    if (CMAKE_CXX_COMPILER_ID STREQUAL GNU)
        # supported in gcc 4.9+
        set(SANITIZE_LINKER_FLAGS "${SANITIZE_LINKER_FLAGS} -static-lib${LIBNAME}")
    endif()
    SET(CMAKE_CXX_FLAGS_${TYPE} "${SANITIZE_FLAGS}" CACHE STRING "" FORCE)
    SET(CMAKE_EXE_LINKER_FLAGS_${TYPE} "${SANITIZE_FLAGS} ${SANITIZE_LINKER_FLAGS} ${LINKER_LIBCXX_FLAGS}" CACHE STRING "" FORCE)
    SET(CMAKE_SHARED_LINKER_FLAGS_${TYPE} "${SANITIZE_FLAGS} ${SANITIZE_LINKER_FLAGS} ${LINKER_LIBCXX_FLAGS}" CACHE STRING "" FORCE)
    MARK_AS_ADVANCED(CMAKE_CXX_FLAGS_${TYPE} CMAKE_EXE_LINKER_FLAGS_${TYPE} CMAKE_SHARED_LINKER_FLAGS_${TYPE})
    unset(SANITIZE_FLAGS)
    unset(SANITIZE_LINKER_FLAGS)
endmacro(add_buildtype)

#possible sanitizers: address,undefined,thread
add_buildtype(DEBUGASAN address asan)
add_buildtype(DEBUGTSAN thread tsan)
add_buildtype(DEBUGUBSAN undefined ubsan)

if (CMAKE_BUILD_TYPE)
    string(TOUPPER ${CMAKE_BUILD_TYPE} BUILD_TYPE_UPPERCASE)
else()
    set(BUILD_TYPE_UPPERCASE RELEASE)
endif()

message(STATUS "Build type: " ${CMAKE_BUILD_TYPE})
message(STATUS "System:     " ${CMAKE_SYSTEM_NAME})
message(STATUS "Compiler:   " ${CMAKE_CXX_COMPILER})
message(STATUS "CXX flags:  ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_${BUILD_TYPE_UPPERCASE}}")
message(STATUS "Lib Flags:  ${CMAKE_SHARED_LINKER_FLAGS} ${CMAKE_SHARED_LINKER_FLAGS_${BUILD_TYPE_UPPERCASE}}")
message(STATUS "Exe Flags:  ${CMAKE_EXE_LINKER_FLAGS} ${CMAKE_EXE_LINKER_FLAGS_${BUILD_TYPE_UPPERCASE}}")
